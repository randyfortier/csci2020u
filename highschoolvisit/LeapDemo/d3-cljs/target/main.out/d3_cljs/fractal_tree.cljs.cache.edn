;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name d3-cljs.fractal-tree, :imports nil, :requires nil, :uses nil, :defs {random-rotation {:protocol-inline nil, :meta {:file "/Users/kenpu/.boot/cache/tmp/Users/kenpu/clones/learn/learn-cljs/d3-cljs/c0k/-grrwi1/d3_cljs/fractal_tree.cljs", :line 38, :column 7, :end-line 38, :end-column 22, :arglists (quote ([]))}, :name d3-cljs.fractal-tree/random-rotation, :variadic false, :file "/Users/kenpu/.boot/cache/tmp/Users/kenpu/clones/learn/learn-cljs/d3-cljs/c0k/-grrwi1/d3_cljs/fractal_tree.cljs", :end-column 22, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 38, :end-line 38, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, conf {:name d3-cljs.fractal-tree/conf, :file "/Users/kenpu/.boot/cache/tmp/Users/kenpu/clones/learn/learn-cljs/d3-cljs/c0k/-grrwi1/d3_cljs/fractal_tree.cljs", :line 11, :column 1, :end-line 11, :end-column 10, :meta {:file "/Users/kenpu/.boot/cache/tmp/Users/kenpu/clones/learn/learn-cljs/d3-cljs/c0k/-grrwi1/d3_cljs/fractal_tree.cljs", :line 11, :column 6, :end-line 11, :end-column 10}}, make-left {:protocol-inline nil, :meta {:file "/Users/kenpu/.boot/cache/tmp/Users/kenpu/clones/learn/learn-cljs/d3-cljs/c0k/-grrwi1/d3_cljs/fractal_tree.cljs", :line 42, :column 7, :end-line 42, :end-column 16, :arglists (quote ([p]))}, :name d3-cljs.fractal-tree/make-left, :variadic false, :file "/Users/kenpu/.boot/cache/tmp/Users/kenpu/clones/learn/learn-cljs/d3-cljs/c0k/-grrwi1/d3_cljs/fractal_tree.cljs", :end-column 16, :method-params ([p]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 42, :end-line 42, :max-fixed-arity 1, :fn-var true, :arglists (quote ([p]))}, update-conf {:protocol-inline nil, :meta {:file "/Users/kenpu/.boot/cache/tmp/Users/kenpu/clones/learn/learn-cljs/d3-cljs/c0k/-grrwi1/d3_cljs/fractal_tree.cljs", :line 59, :column 7, :end-line 59, :end-column 18, :arglists (quote ([dx dy]))}, :name d3-cljs.fractal-tree/update-conf, :variadic false, :file "/Users/kenpu/.boot/cache/tmp/Users/kenpu/clones/learn/learn-cljs/d3-cljs/c0k/-grrwi1/d3_cljs/fractal_tree.cljs", :end-column 18, :method-params ([dx dy]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 59, :end-line 59, :max-fixed-arity 2, :fn-var true, :arglists (quote ([dx dy]))}, tree {:protocol-inline nil, :meta {:file "/Users/kenpu/.boot/cache/tmp/Users/kenpu/clones/learn/learn-cljs/d3-cljs/c0k/-grrwi1/d3_cljs/fractal_tree.cljs", :line 53, :column 7, :end-line 53, :end-column 11, :arglists (quote ([]))}, :name d3-cljs.fractal-tree/tree, :variadic false, :file "/Users/kenpu/.boot/cache/tmp/Users/kenpu/clones/learn/learn-cljs/d3-cljs/c0k/-grrwi1/d3_cljs/fractal_tree.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 53, :end-line 53, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, make-right {:protocol-inline nil, :meta {:file "/Users/kenpu/.boot/cache/tmp/Users/kenpu/clones/learn/learn-cljs/d3-cljs/c0k/-grrwi1/d3_cljs/fractal_tree.cljs", :line 45, :column 7, :end-line 45, :end-column 17, :arglists (quote ([p]))}, :name d3-cljs.fractal-tree/make-right, :variadic false, :file "/Users/kenpu/.boot/cache/tmp/Users/kenpu/clones/learn/learn-cljs/d3-cljs/c0k/-grrwi1/d3_cljs/fractal_tree.cljs", :end-column 17, :method-params ([p]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 45, :end-line 45, :max-fixed-arity 1, :fn-var true, :arglists (quote ([p]))}, end-point {:protocol-inline nil, :meta {:file "/Users/kenpu/.boot/cache/tmp/Users/kenpu/clones/learn/learn-cljs/d3-cljs/c0k/-grrwi1/d3_cljs/fractal_tree.cljs", :line 22, :column 7, :end-line 22, :end-column 16, :arglists (quote ([p]))}, :name d3-cljs.fractal-tree/end-point, :variadic false, :file "/Users/kenpu/.boot/cache/tmp/Users/kenpu/clones/learn/learn-cljs/d3-cljs/c0k/-grrwi1/d3_cljs/fractal_tree.cljs", :end-column 16, :method-params ([p]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 22, :end-line 22, :max-fixed-arity 1, :fn-var true, :arglists (quote ([p]))}, seed {:name d3-cljs.fractal-tree/seed, :file "/Users/kenpu/.boot/cache/tmp/Users/kenpu/clones/learn/learn-cljs/d3-cljs/c0k/-grrwi1/d3_cljs/fractal_tree.cljs", :line 2, :column 1, :end-line 2, :end-column 10, :meta {:file "/Users/kenpu/.boot/cache/tmp/Users/kenpu/clones/learn/learn-cljs/d3-cljs/c0k/-grrwi1/d3_cljs/fractal_tree.cljs", :line 2, :column 6, :end-line 2, :end-column 10}}, grow {:protocol-inline nil, :meta {:file "/Users/kenpu/.boot/cache/tmp/Users/kenpu/clones/learn/learn-cljs/d3-cljs/c0k/-grrwi1/d3_cljs/fractal_tree.cljs", :line 48, :column 7, :end-line 48, :end-column 11, :arglists (quote ([p]))}, :name d3-cljs.fractal-tree/grow, :variadic false, :file "/Users/kenpu/.boot/cache/tmp/Users/kenpu/clones/learn/learn-cljs/d3-cljs/c0k/-grrwi1/d3_cljs/fractal_tree.cljs", :end-column 11, :method-params ([p]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 48, :end-line 48, :max-fixed-arity 1, :fn-var true, :arglists (quote ([p]))}, id-counter {:name d3-cljs.fractal-tree/id-counter, :file "/Users/kenpu/.boot/cache/tmp/Users/kenpu/clones/learn/learn-cljs/d3-cljs/c0k/-grrwi1/d3_cljs/fractal_tree.cljs", :line 17, :column 1, :end-line 17, :end-column 16, :meta {:file "/Users/kenpu/.boot/cache/tmp/Users/kenpu/clones/learn/learn-cljs/d3-cljs/c0k/-grrwi1/d3_cljs/fractal_tree.cljs", :line 17, :column 6, :end-line 17, :end-column 16}}, make-child {:protocol-inline nil, :meta {:file "/Users/kenpu/.boot/cache/tmp/Users/kenpu/clones/learn/learn-cljs/d3-cljs/c0k/-grrwi1/d3_cljs/fractal_tree.cljs", :line 27, :column 7, :end-line 27, :end-column 17, :arglists (quote ([p angle]))}, :name d3-cljs.fractal-tree/make-child, :variadic false, :file "/Users/kenpu/.boot/cache/tmp/Users/kenpu/clones/learn/learn-cljs/d3-cljs/c0k/-grrwi1/d3_cljs/fractal_tree.cljs", :end-column 17, :method-params ([p angle]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 27, :end-line 27, :max-fixed-arity 2, :fn-var true, :arglists (quote ([p angle]))}, get-id {:protocol-inline nil, :meta {:file "/Users/kenpu/.boot/cache/tmp/Users/kenpu/clones/learn/learn-cljs/d3-cljs/c0k/-grrwi1/d3_cljs/fractal_tree.cljs", :line 19, :column 7, :end-line 19, :end-column 13, :arglists (quote ([]))}, :name d3-cljs.fractal-tree/get-id, :variadic false, :file "/Users/kenpu/.boot/cache/tmp/Users/kenpu/clones/learn/learn-cljs/d3-cljs/c0k/-grrwi1/d3_cljs/fractal_tree.cljs", :end-column 13, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:y :parent :l :level :rotation-bias :ar :d :x :da :max-depth :i :a :dl}, :order [:i :x :y :a :l :d :da :dl :ar :rotation-bias :max-depth :level :parent]}, :doc nil}