;; Analyzed by ClojureScript 1.7.170
{:use-macros {go cljs.core.async.macros, go-loop cljs.core.async.macros}, :excludes #{}, :name d3-cljs.core, :imports nil, :requires {cljsjs.d3 cljsjs.d3, cljs.core.async cljs.core.async, fractal d3-cljs.fractal-tree, d3-cljs.fractal-tree d3-cljs.fractal-tree, events d3-cljs.events, d3-cljs.events d3-cljs.events}, :uses {timeout cljs.core.async, <! cljs.core.async, close! cljs.core.async, chan cljs.core.async, >! cljs.core.async, put! cljs.core.async}, :defs {x1 {:protocol-inline nil, :meta {:file "/Users/kenpu/.boot/cache/tmp/Users/kenpu/clones/learn/learn-cljs/d3-cljs/c0k/-grrwi1/d3_cljs/core.cljs", :line 16, :column 7, :end-line 16, :end-column 9, :arglists (quote ([p]))}, :name d3-cljs.core/x1, :variadic false, :file "/Users/kenpu/.boot/cache/tmp/Users/kenpu/clones/learn/learn-cljs/d3-cljs/c0k/-grrwi1/d3_cljs/core.cljs", :end-column 9, :method-params ([p]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 16, :end-line 16, :max-fixed-arity 1, :fn-var true, :arglists (quote ([p]))}, interval {:name d3-cljs.core/interval, :file "/Users/kenpu/.boot/cache/tmp/Users/kenpu/clones/learn/learn-cljs/d3-cljs/c0k/-grrwi1/d3_cljs/core.cljs", :line 12, :column 1, :end-line 12, :end-column 14, :meta {:file "/Users/kenpu/.boot/cache/tmp/Users/kenpu/clones/learn/learn-cljs/d3-cljs/c0k/-grrwi1/d3_cljs/core.cljs", :line 12, :column 6, :end-line 12, :end-column 14}}, draw {:protocol-inline nil, :meta {:file "/Users/kenpu/.boot/cache/tmp/Users/kenpu/clones/learn/learn-cljs/d3-cljs/c0k/-grrwi1/d3_cljs/core.cljs", :line 43, :column 7, :end-line 43, :end-column 11, :arglists (quote ([tree]))}, :name d3-cljs.core/draw, :variadic false, :file "/Users/kenpu/.boot/cache/tmp/Users/kenpu/clones/learn/learn-cljs/d3-cljs/c0k/-grrwi1/d3_cljs/core.cljs", :end-column 11, :method-params ([tree]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 43, :end-line 43, :max-fixed-arity 1, :fn-var true, :arglists (quote ([tree]))}, y2 {:protocol-inline nil, :meta {:file "/Users/kenpu/.boot/cache/tmp/Users/kenpu/clones/learn/learn-cljs/d3-cljs/c0k/-grrwi1/d3_cljs/core.cljs", :line 19, :column 7, :end-line 19, :end-column 9, :arglists (quote ([p]))}, :name d3-cljs.core/y2, :variadic false, :file "/Users/kenpu/.boot/cache/tmp/Users/kenpu/clones/learn/learn-cljs/d3-cljs/c0k/-grrwi1/d3_cljs/core.cljs", :end-column 9, :method-params ([p]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 1, :fn-var true, :arglists (quote ([p]))}, x2 {:protocol-inline nil, :meta {:file "/Users/kenpu/.boot/cache/tmp/Users/kenpu/clones/learn/learn-cljs/d3-cljs/c0k/-grrwi1/d3_cljs/core.cljs", :line 18, :column 7, :end-line 18, :end-column 9, :arglists (quote ([p]))}, :name d3-cljs.core/x2, :variadic false, :file "/Users/kenpu/.boot/cache/tmp/Users/kenpu/clones/learn/learn-cljs/d3-cljs/c0k/-grrwi1/d3_cljs/core.cljs", :end-column 9, :method-params ([p]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 18, :end-line 18, :max-fixed-arity 1, :fn-var true, :arglists (quote ([p]))}, run-tree {:protocol-inline nil, :meta {:file "/Users/kenpu/.boot/cache/tmp/Users/kenpu/clones/learn/learn-cljs/d3-cljs/c0k/-grrwi1/d3_cljs/core.cljs", :line 95, :column 7, :end-line 95, :end-column 15, :arglists (quote ([]))}, :name d3-cljs.core/run-tree, :variadic false, :file "/Users/kenpu/.boot/cache/tmp/Users/kenpu/clones/learn/learn-cljs/d3-cljs/c0k/-grrwi1/d3_cljs/core.cljs", :end-column 15, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 95, :end-line 95, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, dur-animation {:name d3-cljs.core/dur-animation, :file "/Users/kenpu/.boot/cache/tmp/Users/kenpu/clones/learn/learn-cljs/d3-cljs/c0k/-grrwi1/d3_cljs/core.cljs", :line 11, :column 1, :end-line 11, :end-column 19, :meta {:file "/Users/kenpu/.boot/cache/tmp/Users/kenpu/clones/learn/learn-cljs/d3-cljs/c0k/-grrwi1/d3_cljs/core.cljs", :line 11, :column 6, :end-line 11, :end-column 19}}, chan-loop {:protocol-inline nil, :meta {:file "/Users/kenpu/.boot/cache/tmp/Users/kenpu/clones/learn/learn-cljs/d3-cljs/c0k/-grrwi1/d3_cljs/core.cljs", :line 90, :column 7, :end-line 90, :end-column 16, :arglists (quote ([c f]))}, :name d3-cljs.core/chan-loop, :variadic false, :file "/Users/kenpu/.boot/cache/tmp/Users/kenpu/clones/learn/learn-cljs/d3-cljs/c0k/-grrwi1/d3_cljs/core.cljs", :end-column 16, :method-params ([c f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 90, :end-line 90, :max-fixed-arity 2, :fn-var true, :arglists (quote ([c f]))}, -main {:protocol-inline nil, :meta {:file "/Users/kenpu/.boot/cache/tmp/Users/kenpu/clones/learn/learn-cljs/d3-cljs/c0k/-grrwi1/d3_cljs/core.cljs", :line 101, :column 7, :end-line 101, :end-column 12, :arglists (quote ([]))}, :name d3-cljs.core/-main, :variadic false, :file "/Users/kenpu/.boot/cache/tmp/Users/kenpu/clones/learn/learn-cljs/d3-cljs/c0k/-grrwi1/d3_cljs/core.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 101, :end-line 101, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, stroke-color {:protocol-inline nil, :meta {:file "/Users/kenpu/.boot/cache/tmp/Users/kenpu/clones/learn/learn-cljs/d3-cljs/c0k/-grrwi1/d3_cljs/core.cljs", :line 31, :column 7, :end-line 31, :end-column 19, :arglists (quote ([p]))}, :name d3-cljs.core/stroke-color, :variadic false, :file "/Users/kenpu/.boot/cache/tmp/Users/kenpu/clones/learn/learn-cljs/d3-cljs/c0k/-grrwi1/d3_cljs/core.cljs", :end-column 19, :method-params ([p]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 31, :end-line 31, :max-fixed-arity 1, :fn-var true, :arglists (quote ([p]))}, stroke-opacity {:protocol-inline nil, :meta {:file "/Users/kenpu/.boot/cache/tmp/Users/kenpu/clones/learn/learn-cljs/d3-cljs/c0k/-grrwi1/d3_cljs/core.cljs", :line 25, :column 7, :end-line 25, :end-column 21, :arglists (quote ([p]))}, :name d3-cljs.core/stroke-opacity, :variadic false, :file "/Users/kenpu/.boot/cache/tmp/Users/kenpu/clones/learn/learn-cljs/d3-cljs/c0k/-grrwi1/d3_cljs/core.cljs", :end-column 21, :method-params ([p]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 25, :end-line 25, :max-fixed-arity 1, :fn-var true, :arglists (quote ([p]))}, y1 {:protocol-inline nil, :meta {:file "/Users/kenpu/.boot/cache/tmp/Users/kenpu/clones/learn/learn-cljs/d3-cljs/c0k/-grrwi1/d3_cljs/core.cljs", :line 17, :column 7, :end-line 17, :end-column 9, :arglists (quote ([p]))}, :name d3-cljs.core/y1, :variadic false, :file "/Users/kenpu/.boot/cache/tmp/Users/kenpu/clones/learn/learn-cljs/d3-cljs/c0k/-grrwi1/d3_cljs/core.cljs", :end-column 9, :method-params ([p]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 1, :fn-var true, :arglists (quote ([p]))}, run-clicks {:protocol-inline nil, :meta {:file "/Users/kenpu/.boot/cache/tmp/Users/kenpu/clones/learn/learn-cljs/d3-cljs/c0k/-grrwi1/d3_cljs/core.cljs", :line 98, :column 7, :end-line 98, :end-column 17, :arglists (quote ([]))}, :name d3-cljs.core/run-clicks, :variadic false, :file "/Users/kenpu/.boot/cache/tmp/Users/kenpu/clones/learn/learn-cljs/d3-cljs/c0k/-grrwi1/d3_cljs/core.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 98, :end-line 98, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, level {:protocol-inline nil, :meta {:file "/Users/kenpu/.boot/cache/tmp/Users/kenpu/clones/learn/learn-cljs/d3-cljs/c0k/-grrwi1/d3_cljs/core.cljs", :line 37, :column 7, :end-line 37, :end-column 12, :arglists (quote ([p]))}, :name d3-cljs.core/level, :variadic false, :file "/Users/kenpu/.boot/cache/tmp/Users/kenpu/clones/learn/learn-cljs/d3-cljs/c0k/-grrwi1/d3_cljs/core.cljs", :end-column 12, :method-params ([p]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 37, :end-line 37, :max-fixed-arity 1, :fn-var true, :arglists (quote ([p]))}, div {:name d3-cljs.core/div, :file "/Users/kenpu/.boot/cache/tmp/Users/kenpu/clones/learn/learn-cljs/d3-cljs/c0k/-grrwi1/d3_cljs/core.cljs", :line 14, :column 1, :end-line 14, :end-column 9, :meta {:file "/Users/kenpu/.boot/cache/tmp/Users/kenpu/clones/learn/learn-cljs/d3-cljs/c0k/-grrwi1/d3_cljs/core.cljs", :line 14, :column 6, :end-line 14, :end-column 9}}, update-tree {:protocol-inline nil, :meta {:file "/Users/kenpu/.boot/cache/tmp/Users/kenpu/clones/learn/learn-cljs/d3-cljs/c0k/-grrwi1/d3_cljs/core.cljs", :line 79, :column 7, :end-line 79, :end-column 18, :arglists (quote ([data idx]))}, :name d3-cljs.core/update-tree, :variadic false, :file "/Users/kenpu/.boot/cache/tmp/Users/kenpu/clones/learn/learn-cljs/d3-cljs/c0k/-grrwi1/d3_cljs/core.cljs", :end-column 18, :method-params ([data idx]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 79, :end-line 79, :max-fixed-arity 2, :fn-var true, :arglists (quote ([data idx]))}, stroke-width {:protocol-inline nil, :meta {:file "/Users/kenpu/.boot/cache/tmp/Users/kenpu/clones/learn/learn-cljs/d3-cljs/c0k/-grrwi1/d3_cljs/core.cljs", :line 21, :column 7, :end-line 21, :end-column 19, :arglists (quote ([p]))}, :name d3-cljs.core/stroke-width, :variadic false, :file "/Users/kenpu/.boot/cache/tmp/Users/kenpu/clones/learn/learn-cljs/d3-cljs/c0k/-grrwi1/d3_cljs/core.cljs", :end-column 19, :method-params ([p]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 1, :fn-var true, :arglists (quote ([p]))}, draw-tree {:protocol-inline nil, :meta {:file "/Users/kenpu/.boot/cache/tmp/Users/kenpu/clones/learn/learn-cljs/d3-cljs/c0k/-grrwi1/d3_cljs/core.cljs", :line 73, :column 7, :end-line 73, :end-column 16, :arglists (quote ([i idx]))}, :name d3-cljs.core/draw-tree, :variadic false, :file "/Users/kenpu/.boot/cache/tmp/Users/kenpu/clones/learn/learn-cljs/d3-cljs/c0k/-grrwi1/d3_cljs/core.cljs", :end-column 16, :method-params ([i idx]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 73, :end-line 73, :max-fixed-arity 2, :fn-var true, :arglists (quote ([i idx]))}, redraw {:protocol-inline nil, :meta {:file "/Users/kenpu/.boot/cache/tmp/Users/kenpu/clones/learn/learn-cljs/d3-cljs/c0k/-grrwi1/d3_cljs/core.cljs", :line 60, :column 7, :end-line 60, :end-column 13, :arglists (quote ([tree]))}, :name d3-cljs.core/redraw, :variadic false, :file "/Users/kenpu/.boot/cache/tmp/Users/kenpu/clones/learn/learn-cljs/d3-cljs/c0k/-grrwi1/d3_cljs/core.cljs", :end-column 13, :method-params ([tree]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 60, :end-line 60, :max-fixed-arity 1, :fn-var true, :arglists (quote ([tree]))}}, :require-macros {cljs.core.async.macros cljs.core.async.macros}, :cljs.analyzer/constants {:seen #{:y :else :recur :x :max-depth :keywordize-keys}, :order [:x :keywordize-keys :y :max-depth :else :recur]}, :doc nil}